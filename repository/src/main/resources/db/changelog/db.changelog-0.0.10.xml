<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <!-- This changeset is actually useless and is superseeded by 9.6 -->
    <changeSet id="9.5" author="valentin.laurin@hmcts.net">
        <update tableName="case_type">
            <column name="security_classification" value="Public" />
            <where>security_classification = NULL</where>
        </update>

        <update tableName="event">
            <column name="security_classification" value="Public" />
            <where>security_classification = NULL</where>
        </update>

        <update tableName="case_field">
            <column name="security_classification" value="Public" />
            <where>security_classification = NULL</where>
        </update>

        <update tableName="complex_field">
            <column name="security_classification" value="Public" />
            <where>security_classification = NULL</where>
        </update>
    </changeSet>

    <changeSet id="9.6" author="valentin.laurin@hmcts.net">
        <preConditions onFail="CONTINUE">
            <not>
                <changeSetExecuted id="10" author="Simon Irving" changeLogFile="db/changelog/db.changelog-0.0.10.xml" />
            </not>
        </preConditions>

        <update tableName="case_type">
            <column name="security_classification" value="Public" />
            <where>security_classification IS NULL</where>
        </update>

        <update tableName="event">
            <column name="security_classification" value="Public" />
            <where>security_classification IS NULL</where>
        </update>

        <update tableName="case_field">
            <column name="security_classification" value="Public" />
            <where>security_classification IS NULL</where>
        </update>

        <update tableName="complex_field">
            <column name="security_classification" value="Public" />
            <where>security_classification IS NULL</where>
        </update>
    </changeSet>

    <changeSet id="10" author="Simon Irving">

        <addNotNullConstraint columnName="security_classification"
                              tableName="event"/>

        <addNotNullConstraint columnName="security_classification"
                              tableName="case_type"/>

        <addNotNullConstraint columnName="security_classification"
                              tableName="case_field"/>

        <addNotNullConstraint columnName="security_classification"
                              tableName="complex_field"/>

    </changeSet>

    <changeSet id="10.1" author="valentin.laurin@hmcts.net" runInTransaction="false">
        <sql>
            ALTER TYPE securityclassification ADD VALUE 'PUBLIC';
        </sql>
    </changeSet>

    <changeSet id="10.2" author="valentin.laurin@hmcts.net" runInTransaction="false">
        <sql>
            ALTER TYPE securityclassification ADD VALUE 'PRIVATE';
        </sql>
    </changeSet>

    <changeSet id="10.3" author="valentin.laurin@hmcts.net" runInTransaction="false">
        <sql>
            ALTER TYPE securityclassification ADD VALUE 'RESTRICTED';
        </sql>
    </changeSet>

    <changeSet id="10.4" author="valentin.laurin@hmcts.net">

        <update tableName="case_type">
            <column name="security_classification" value="PUBLIC" />
            <where>security_classification = 'Public'</where>
        </update>
        <update tableName="case_type">
            <column name="security_classification" value="PRIVATE" />
            <where>security_classification = 'Private'</where>
        </update>
        <update tableName="case_type">
            <column name="security_classification" value="RESTRICTED" />
            <where>security_classification = 'Restricted'</where>
        </update>

        <update tableName="event">
            <column name="security_classification" value="PUBLIC" />
            <where>security_classification = 'Public'</where>
        </update>
        <update tableName="event">
            <column name="security_classification" value="PRIVATE" />
            <where>security_classification = 'Private'</where>
        </update>
        <update tableName="event">
            <column name="security_classification" value="RESTRICTED" />
            <where>security_classification = 'Restricted'</where>
        </update>

        <update tableName="case_field">
            <column name="security_classification" value="PUBLIC" />
            <where>security_classification = 'Public'</where>
        </update>
        <update tableName="case_field">
            <column name="security_classification" value="PRIVATE" />
            <where>security_classification = 'Private'</where>
        </update>
        <update tableName="case_field">
            <column name="security_classification" value="RESTRICTED" />
            <where>security_classification = 'Restricted'</where>
        </update>

        <update tableName="complex_field">
            <column name="security_classification" value="PUBLIC" />
            <where>security_classification = 'Public'</where>
        </update>
        <update tableName="complex_field">
            <column name="security_classification" value="PRIVATE" />
            <where>security_classification = 'Private'</where>
        </update>
        <update tableName="complex_field">
            <column name="security_classification" value="RESTRICTED" />
            <where>security_classification = 'Restricted'</where>
        </update>

        <update tableName="user_role">
            <column name="security_classification" value="PUBLIC" />
            <where>security_classification = 'Public'</where>
        </update>
        <update tableName="user_role">
            <column name="security_classification" value="PRIVATE" />
            <where>security_classification = 'Private'</where>
        </update>
        <update tableName="user_role">
            <column name="security_classification" value="RESTRICTED" />
            <where>security_classification = 'Restricted'</where>
        </update>

        <sql>
            CREATE TYPE security_classification AS ENUM ('PUBLIC', 'PRIVATE', 'RESTRICTED');
        </sql>

        <!--
            This step is needed as postgres cannot cast from
            `securityclassification` to `security_classification`
            direclty
        -->
        <modifyDataType tableName="case_type"
                        columnName="security_classification"
                        newDataType="VARCHAR(16)"/>
        <modifyDataType tableName="event"
                        columnName="security_classification"
                        newDataType="VARCHAR(16)"/>
        <modifyDataType tableName="case_field"
                        columnName="security_classification"
                        newDataType="VARCHAR(16)"/>
        <modifyDataType tableName="complex_field"
                        columnName="security_classification"
                        newDataType="VARCHAR(16)"/>
        <modifyDataType tableName="user_role"
                        columnName="security_classification"
                        newDataType="VARCHAR(16)"/>

        <modifyDataType tableName="case_type"
                        columnName="security_classification"
                        newDataType="security_classification"/>
        <modifyDataType tableName="event"
                        columnName="security_classification"
                        newDataType="security_classification"/>
        <modifyDataType tableName="case_field"
                        columnName="security_classification"
                        newDataType="security_classification"/>
        <modifyDataType tableName="complex_field"
                        columnName="security_classification"
                        newDataType="security_classification"/>
        <modifyDataType tableName="user_role"
                        columnName="security_classification"
                        newDataType="security_classification"/>

        <sql>
            DROP TYPE securityclassification;
        </sql>

    </changeSet>

</databaseChangeLog>
